{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mlvdi\\\\OneDrive\\\\Documentos\\\\GitHub\\\\MinesweeperReact\\\\src\\\\components\\\\game-panel\\\\game-panel.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./game-panel.css\";\nimport { Card } from \"../index\";\nimport { checkIfIsFlipped } from \"../../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [flippedCards, setFlippedCards] = useState([]);\nfunction GamePanel({\n  cards,\n  selectedLevel\n}) {\n  _s();\n  const gameClass = selectedLevel === \"1\" ? \"\" : selectedLevel === \"2\" ? \"intermedio\" : selectedLevel === \"3\" ? \"avancado\" : \"\";\n  useEffect(() => {\n    setFlippedCards([]);\n    setMatchedCards([]);\n  }, [gameStarted]);\n  const handleClickCard = card => {\n    let tmp = Array.from(flippedCards);\n    if (gameStarted) {\n      tmp.push(card);\n      setFlippedCards(tmp);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"game-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sr-only\",\n      children: \"Pe\\xE7as do Jogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game\",\n      className: gameClass,\n      children: cards.map(elemento => /*#__PURE__*/_jsxDEV(Card, {\n        name: elemento.name,\n        onClickCard: handleClickCard,\n        flipped: checkIfIsFlipped(flippedCards, card.id)\n      }, elemento.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePanel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GamePanel;\nexport default GamePanel;\nvar _c;\n$RefreshReg$(_c, \"GamePanel\");","map":{"version":3,"names":["React","useState","useEffect","Card","checkIfIsFlipped","jsxDEV","_jsxDEV","flippedCards","setFlippedCards","GamePanel","cards","selectedLevel","_s","gameClass","setMatchedCards","gameStarted","handleClickCard","card","tmp","Array","from","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","elemento","name","onClickCard","flipped","_c","$RefreshReg$"],"sources":["C:/Users/mlvdi/OneDrive/Documentos/GitHub/MinesweeperReact/src/components/game-panel/game-panel.component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./game-panel.css\";\r\nimport { Card } from \"../index\";\r\nimport { checkIfIsFlipped} from \"../../helpers\";\r\n\r\nconst [flippedCards, setFlippedCards] = useState([]);\r\n\r\nfunction GamePanel({ cards, selectedLevel}) {\r\n  const gameClass =\r\n    selectedLevel === \"1\"\r\n      ? \"\"\r\n      : selectedLevel === \"2\"\r\n      ? \"intermedio\"\r\n      : selectedLevel === \"3\"\r\n      ? \"avancado\"\r\n      :\"\";\r\n      \r\n      useEffect(() => {\r\n        setFlippedCards([]);\r\n        setMatchedCards([]);\r\n      }, [gameStarted]);\r\n\r\n      const handleClickCard = (card) => {\r\n        let tmp = Array.from(flippedCards);\r\n    \r\n        if (gameStarted)\r\n        {\r\n          tmp.push(card);\r\n          setFlippedCards(tmp);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <section className=\"game-panel\">\r\n      <h3 className=\"sr-only\">Pe√ßas do Jogo</h3>\r\n      <div id=\"game\" className={gameClass}>\r\n        {cards.map((elemento) => (\r\n          <Card \r\n            key={elemento.id} \r\n            name={elemento.name} \r\n            onClickCard={handleClickCard}\r\n            flipped={checkIfIsFlipped(flippedCards,card.id)}\r\n            />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default GamePanel;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,SAASC,IAAI,QAAQ,UAAU;AAC/B,SAASC,gBAAgB,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;AAEpD,SAASQ,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAMC,SAAS,GACbF,aAAa,KAAK,GAAG,GACjB,EAAE,GACFA,aAAa,KAAK,GAAG,GACrB,YAAY,GACZA,aAAa,KAAK,GAAG,GACrB,UAAU,GACX,EAAE;EAEHT,SAAS,CAAC,MAAM;IACdM,eAAe,CAAC,EAAE,CAAC;IACnBM,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC;EAEjB,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAIC,GAAG,GAAGC,KAAK,CAACC,IAAI,CAACb,YAAY,CAAC;IAElC,IAAIQ,WAAW,EACf;MACEG,GAAG,CAACG,IAAI,CAACJ,IAAI,CAAC;MACdT,eAAe,CAACU,GAAG,CAAC;IACtB;EACF,CAAC;EAEL,oBACEZ,OAAA;IAASgB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC7BjB,OAAA;MAAIgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CrB,OAAA;MAAKsB,EAAE,EAAC,MAAM;MAACN,SAAS,EAAET,SAAU;MAAAU,QAAA,EACjCb,KAAK,CAACmB,GAAG,CAAEC,QAAQ,iBAClBxB,OAAA,CAACH,IAAI;QAEH4B,IAAI,EAAED,QAAQ,CAACC,IAAK;QACpBC,WAAW,EAAEhB,eAAgB;QAC7BiB,OAAO,EAAE7B,gBAAgB,CAACG,YAAY,EAACU,IAAI,CAACW,EAAE;MAAE,GAH3CE,QAAQ,CAACF,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACf,EAAA,CAxCQH,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}