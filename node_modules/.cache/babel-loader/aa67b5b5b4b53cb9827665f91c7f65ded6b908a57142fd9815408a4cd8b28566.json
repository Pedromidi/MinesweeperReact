{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mlvdi\\\\OneDrive\\\\Documentos\\\\GitHub\\\\MinesweeperReact\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./assets/styles/App.css\";\nimport React, { useState } from 'react';\nimport { Header, Footer, ControlPanel, GamePanel } from \"./components/\";\nimport checkIfIsFlipped from \"./helpers/checkIfIsFlipped\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [selectedLevel, setSelectedLevel] = useState(\"0\");\n  const [cards, setCards] = useState([]);\n  const [rows, setRows] = useState(3);\n  const [cols, setCols] = useState(3);\n  const [numMines, setNumMines] = useState(3);\n  const handleGameStart = () => {\n    setGameStarted(!gameStarted);\n    if (!gameStarted) createPanel(selectedLevel);\n  };\n  const handleLevelChange = event => {\n    const {\n      value\n    } = event.currentTarget;\n    setSelectedLevel(value);\n    createPanel(value);\n  };\n  function createPanel(level) {\n    switch (level) {\n      case \"0\":\n        //numOfCardPairs = 0;\n        setRows(0);\n        setCols(0);\n        setNumMines(0);\n        break;\n      case \"1\":\n        //numOfCardPairs = 2;\n        setRows(9);\n        setCols(9);\n        setNumMines(10);\n        break;\n      case \"2\":\n        //numOfCardPairs = 3;\n        setRows(16);\n        setCols(16);\n        setNumMines(40);\n        break;\n      case \"3\":\n        //numOfCardPairs = 6;\n        setRows(16);\n        setCols(30);\n        setNumMines(99);\n        break;\n      default:\n        setRows(9);\n        setCols(9);\n        setNumMines(10);\n    }\n\n    // Create an empty grid\n    const grid = Array(rows).fill().map(() => Array(cols).fill(0));\n\n    // Randomly place mines on the grid\n    let minesPlaced = 0;\n    while (minesPlaced < numMines) {\n      const row = Math.floor(Math.random() * rows);\n      const col = Math.floor(Math.random() * cols);\n      if (grid[row][col] !== 'mine') {\n        grid[row][col] = 'mine';\n        minesPlaced++;\n\n        // Update adjacent tiles' values\n        for (let i = Math.max(0, row - 1); i <= Math.min(row + 1, rows - 1); i++) {\n          for (let j = Math.max(0, col - 1); j <= Math.min(col + 1, cols - 1); j++) {\n            if (grid[i][j] !== 'mine') {\n              grid[i][j]++;\n            }\n          }\n        }\n      }\n    }\n\n    // Convert grid values to card names\n    const field = [];\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        field.push({\n          id: `${i}-${j}`,\n          name: grid[i][j] === 'mine' ? 'mine' : `${grid[i][j]}`\n        });\n      }\n    }\n    setCards(field);\n  }\n  ///////////////////////////////\n  var [flippedCards, setFlippedCards] = useState([]);\n  const handleClickCard = card => {\n    if (gameStarted) {\n      if (checkIfIsFlipped(flippedCards, card)) {} else {\n        setFlippedCards([...flippedCards, card]);\n      }\n    }\n  };\n  ///////////////////////////////\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(ControlPanel, {\n        gameStarted: gameStarted,\n        onGameStart: handleGameStart,\n        selectedLevel: selectedLevel,\n        onLevelChange: handleLevelChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GamePanel, {\n        cards: cards,\n        selectedLevel: selectedLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xwjfQK7gX6WObqjdg6fVC1D9Zco=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Footer","ControlPanel","GamePanel","checkIfIsFlipped","jsxDEV","_jsxDEV","App","_s","gameStarted","setGameStarted","selectedLevel","setSelectedLevel","cards","setCards","rows","setRows","cols","setCols","numMines","setNumMines","handleGameStart","createPanel","handleLevelChange","event","value","currentTarget","level","grid","Array","fill","map","minesPlaced","row","Math","floor","random","col","i","max","min","j","field","push","id","name","flippedCards","setFlippedCards","handleClickCard","card","children","fileName","_jsxFileName","lineNumber","columnNumber","onGameStart","onLevelChange","_c","$RefreshReg$"],"sources":["C:/Users/mlvdi/OneDrive/Documentos/GitHub/MinesweeperReact/src/App.js"],"sourcesContent":["import \"./assets/styles/App.css\";\r\nimport React, { useState } from 'react';\r\nimport { Header, Footer, ControlPanel, GamePanel } from \"./components/\";\r\nimport checkIfIsFlipped from \"./helpers/checkIfIsFlipped\";\r\n\r\nfunction App() {\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [selectedLevel, setSelectedLevel] = useState(\"0\");\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const [rows, setRows] = useState(3);\r\n  const [cols, setCols] = useState(3);\r\n  const [numMines, setNumMines] = useState(3);\r\n\r\n  const handleGameStart = () => {\r\n    setGameStarted(!gameStarted);\r\n    if (!gameStarted) createPanel(selectedLevel);\r\n  };\r\n\r\n  const handleLevelChange = (event) => {\r\n    const { value } = event.currentTarget;\r\n    setSelectedLevel(value);\r\n    createPanel(value);\r\n  };\r\n\r\n  function createPanel(level) {\r\n    switch (level) {\r\n      case \"0\":\r\n        //numOfCardPairs = 0;\r\n        setRows(0);\r\n        setCols(0);\r\n        setNumMines(0);\r\n        break;\r\n      case \"1\":\r\n        //numOfCardPairs = 2;\r\n        setRows(9);\r\n        setCols(9);\r\n        setNumMines(10);\r\n        break;\r\n      case \"2\":\r\n        //numOfCardPairs = 3;\r\n        setRows(16);\r\n        setCols(16);\r\n        setNumMines(40);\r\n        break;\r\n      case \"3\":\r\n        //numOfCardPairs = 6;\r\n        setRows(16);\r\n        setCols(30);\r\n        setNumMines(99);\r\n        break;\r\n      default:\r\n        setRows(9);\r\n        setCols(9);\r\n        setNumMines(10);\r\n    }\r\n\r\n    // Create an empty grid\r\n    const grid = Array(rows).fill().map(() => Array(cols).fill(0));\r\n\r\n    // Randomly place mines on the grid\r\n    let minesPlaced = 0;\r\n    while (minesPlaced < numMines) {\r\n      const row = Math.floor(Math.random() * rows);\r\n      const col = Math.floor(Math.random() * cols);\r\n      if (grid[row][col] !== 'mine') {\r\n        grid[row][col] = 'mine';\r\n        minesPlaced++;\r\n\r\n        // Update adjacent tiles' values\r\n        for (let i = Math.max(0, row - 1); i <= Math.min(row + 1, rows - 1); i++) {\r\n          for (let j = Math.max(0, col - 1); j <= Math.min(col + 1, cols - 1); j++) {\r\n            if (grid[i][j] !== 'mine') {\r\n              grid[i][j]++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Convert grid values to card names\r\n    const field = [];\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < cols; j++) {\r\n        field.push({ id: `${i}-${j}`, name: grid[i][j] === 'mine' ? 'mine' : `${grid[i][j]}` });\r\n      }\r\n    }\r\n    setCards(field);\r\n  }\r\n///////////////////////////////\r\n  var [flippedCards, setFlippedCards]= useState([]);\r\n  const handleClickCard = (card) => {\r\n    if(gameStarted){\r\n      if(checkIfIsFlipped(flippedCards, card)){\r\n\r\n      }\r\n      else{\r\n        setFlippedCards([...flippedCards, card]);\r\n      }\r\n    }\r\n  }\r\n///////////////////////////////\r\n  return (\r\n    <div id=\"container\">\r\n      <Header />\r\n      <main>\r\n        <ControlPanel\r\n          gameStarted={gameStarted}\r\n          onGameStart={handleGameStart}\r\n          selectedLevel={selectedLevel}\r\n          onLevelChange={handleLevelChange}\r\n        />\r\n        <GamePanel cards={cards} selectedLevel={selectedLevel} />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}